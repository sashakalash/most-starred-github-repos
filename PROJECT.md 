# MostStarredGithubRepos

This project was generated using [Angular CLI](https://github.com/angular/angular-cli) version 19.1.3.

## Features

*   **List Most Starred Repos:** Displays a list of the most starred GitHub repositories created in the last 30 days.
*   **Repository Details:** Each repository row includes:
    *   Repository name (clickable to open a modal)
    *   Repository description
    *   Number of stars
    *   Number of issues
    *   Username and avatar of the owner
*   **Infinite Scroll Pagination:**  New results are loaded as the user scrolls.
*   **Repository Rating (Modal):**
    *   Clicking the repository name opens a modal window with the repository details.
    *   Users can rate the repository using a 5-star rating system within the modal.
    *   The given rating is displayed next to the repository name in the main list after the modal is closed.

## Development server

To start a local development server, run:

```bash
ng serve
```
Once the server is running, open your browser and navigate to http://localhost:4200/. The application will automatically reload whenever you modify any of the source files.


--- First Run ---
✔ Browser application bundle generation complete.
20 05 2025 10:46:19.530:INFO [karma-server]: Karma v6.4.4 server started at http://localhost:9876/
20 05 2025 10:46:19.531:INFO [launcher]: Launching browsers Chrome with concurrency unlimited
20 05 2025 10:46:19.534:INFO [launcher]: Starting browser Chrome
20 05 2025 10:46:20.576:INFO [Chrome 136.0.0.0 (Mac OS 10.15.7)]: Connected on socket 6ldsvgH6_STeqFQWAAAB with id 70914799
Chrome 136.0.0.0 (Mac OS 10.15.7): Executed 1 of 1 SUCCESS (0.017 secs / 0.013 secs)
TOTAL: 1 SUCCESS

=============================== Coverage summary ===============================
Statements   : 100% ( 3/3 )
Branches     : 100% ( 0/0 )
Functions    : 100% ( 0/0 )
Lines        : 100% ( 2/2 )
================================================================================
--- Last Run ---
Why I didn’t use full NgRx:
This project’s state is relatively simple. I used Angular services and Signal-based stores to avoid overengineering. If the app were to scale (e.g., with auth, theming, offline mode), I’d introduce NgRx for better state traceability and modularity.
